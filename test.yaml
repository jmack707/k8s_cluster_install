---
- name: Deploy Kubernetes cluster
  hosts: all
  become: true

  vars:
    kube_master: "{{ groups['kubernetes-master'] | default([]) }}"
    kube_workers: "{{ groups['kubernetes-workers'] | default([]) }}"
    kube_sysctl:
      net.bridge.bridge-nf-call-ip6tables: 1
      net.bridge.bridge-nf-call-iptables: 1

  tasks:
    - name: Add Kubernetes repository key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Install Kubernetes components
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Disable swap
      command: swapoff -a
      register: swap_status
      changed_when: swap_status.rc == 0
      when: ansible_swaptotal_mb > 0

    - name: Update sysctl settings for Kubernetes
      sysctl:
        name: "{{ item }}"
        value: "{{ kube_sysctl[item] }}"
        state: present
        reload: yes
      loop: "{{ kube_sysctl.keys() }}"

    - name: Initialize Kubernetes master
      command: kubeadm init --apiserver-advertise-address={{ ansible_default_ipv4.address }} --pod-network-cidr=10.244.0.0/16
      register: kubeadm_output
      when: inventory_hostname == kube_master[0]

    - name: Configure kubectl for non-root user
      copy:
        content: "{{ kubeadm_output.stdout_lines | select('search', 'kubeadm join') | list | join('\n') }}"
        dest: /home/{{ ansible_user }}/.kube/config
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Install Calico pod network add-on
      command: kubectl apply -f https://docs.projectcalico.org/v3.16/manifests/calico.yaml
      when: inventory_hostname == kube_master[0]

    - name: Join Kubernetes workers to the cluster
      command: "{{ hostvars[item]['kubeadm_join_cmd'] }}"
      loop: "{{ kube_workers }}"
      when: inventory_hostname == kube_master[0]
