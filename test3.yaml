---
- name: Install Kubernetes with CRI-O
  hosts: all
  become: true
  vars:
    k8s_version: "1.22.2-00"
    crio_version: "1.21.0"
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install packages required for Kubernetes and CRI-O
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - gnupg-agent

    - name: Add Kubernetes GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes apt repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
        update_cache: yes
        
    - name: Add Kubernetes apt repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
        update_cache: yes     

    - name: Ensure swap file doesn't exist (if configured).
      file:
        path: "{{ swap_file_path }}"
        state: absent

    - name: Disable swap (if configured).
       command: swapoff -a

    - name: Add CRI-O GPG key
      apt_key:
        url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/Release.key
        state: present

    - name: Add CRI-O apt repository
      apt_repository:
        repo: deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_20.04/ /
        state: present
        filename: cri-o.list
        update_cache: yes

    - name: Install Kubernetes components
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      loop:
        - kubelet={{ k8s_version }}
        - kubeadm={{ k8s_version }}
        - kubectl={{ k8s_version }}

    - name: Install CRI-O
      apt:
        name: cri-o={{ crio_version }}
        state: present

    - name: Enable and start CRI-O service
      systemd:
        name: crio
        enabled: true
        state: started

    - name: Disable and stop kubelet service
      systemd:
        name: kubelet
        enabled: false
        state: stopped

    - name: Configure CRI-O as Kubernetes runtime
      lineinfile:
        path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        line: Environment="KUBELET_EXTRA_ARGS=--container-runtime=remote --container-runtime-endpoint=/var/run/crio/crio.sock"
        state: present
        create: true

    - name: Reload systemd configuration
      systemd:
        daemon_reload: yes

    - name: Restart kubelet service
      systemd:
        name: kubelet
        state: started
