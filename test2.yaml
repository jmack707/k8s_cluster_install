---
- name: Install Kubernetes with Containerd on Ubuntu
  hosts: all
  become: true

  tasks:
    # Install prerequisites
    - name: Install apt-transport-https, curl and gnupg
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - apt-transport-https
        - curl
        - gnupg

     - name: disable swap
       shell: |
               sudo swapoff -a
               sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    # Add Kubernetes signing key
    - name: Add Kubernetes signing key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    # Add Kubernetes repository
    - name: Add Kubernetes repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    # Install Kubernetes and Containerd
    - name: Install Kubernetes and Containerd
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - kubelet
        - kubeadm
        - kubectl
        - containerd.io

    # Configure Containerd
    - name: Configure Containerd
      copy:
        dest: /etc/containerd/config.toml
        content: |
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
            runtime_type = "io.containerd.runc.v1"
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.crio]
            runtime_type = "io.containerd.crio.v1"

    # Initialize Kubernetes cluster on the first node
    - name: Initialize Kubernetes cluster on first node
      command: kubeadm init --pod-network-cidr=192.168.0.0/16
      when: inventory_hostname == groups['all'][0]

    # Configure kubectl for non-root user
    - name: Configure kubectl for non-root user
      become: false
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/admin.conf
        remote_src: true
      when: inventory_hostname == groups['all'][0]
    - name: Set kubectl context for non-root user
      become: false
      command: kubectl config use-context default --kubeconfig=/home/{{ ansible_user }}/admin.conf
      when: inventory_hostname == groups['all'][0]
    - name: Copy kubectl config to root user
      become: true
      copy:
        src: /home/{{ ansible_user }}/admin.conf
        dest: /root/admin.conf
      when: inventory_hostname == groups['all'][0]

    # Join worker nodes to the cluster
    - name: Join worker nodes to the cluster
      command: "{{ hostvars[groups['all'][0]]['stdout_lines'][0] }}"
      when: inventory_hostname != groups['all'][0] and "'kubeadm join' in hostvars[groups['all'][0]]['stdout_lines'][0]"

    # Install Calico network plugin
    - name: Install Calico network plugin
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      when: inventory_hostname == groups['all'][0]
